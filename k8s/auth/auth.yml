apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: microblog-app
  labels:
    app: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: auth:0.0.1-SNAPSHOT
          imagePullPolicy: Never
          ports:
            - containerPort: 80
            - containerPort: 5005
          readinessProbe:
            httpGet:
              port: 80
              path: /actuator/health/readiness
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet:
              port: 80
              path: /actuator/health/liveness
            initialDelaySeconds: 20
            periodSeconds: 10
          env:
            - name: SECRET_POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-postgres-secret
                  key: POSTGRES_USER
            - name: SECRET_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-postgres-secret
                  key: POSTGRES_PASSWORD
            - name: SECRET_POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: user-postgres-secret
                  key: POSTGRES_DB
            - name: CONFIDENTIAL_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: confidential-client-secret
                  key: CLIENT_ID
            - name: CONFIDENTIAL_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: confidential-client-secret
                  key: CLIENT_SECRET
            - name: SECRET_REQUIREPASS
              valueFrom:
                secretKeyRef:
                  name: redis-auth-secret
                  key: REQUIREPASS

---
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: microblog-app
  labels:
    app: auth
    spring-boot: "true"
spec:
  ports:
    - protocol: "TCP"
      port: 80
  selector:
    app: auth
  type: NodePort
